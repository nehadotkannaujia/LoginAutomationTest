{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-02-02T12:52:29.407Z",
    "end": "2024-02-02T12:52:39.211Z",
    "duration": 9804,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ac30a861-35a8-4602-a348-7ebeeac273d2",
      "title": "",
      "fullFile": "C:\\Users\\lyf\\Documents\\neha_coding\\automation\\basic_login_chai_mocha\\tests\\testLogin.js",
      "file": "\\tests\\testLogin.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9f569888-50dd-48df-ac2e-9e10a66eacc7",
          "title": "login functionality",
          "fullFile": "C:\\Users\\lyf\\Documents\\neha_coding\\automation\\basic_login_chai_mocha\\tests\\testLogin.js",
          "file": "\\tests\\testLogin.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"login functionality\"",
              "fullTitle": "login functionality \"before each\" hook in \"login functionality\"",
              "timedOut": false,
              "duration": 2537,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginPage.initializeDriver()",
              "err": {},
              "uuid": "68ab7f0b-173f-4edb-88a9-f275718d518c",
              "parentUUID": "9f569888-50dd-48df-ac2e-9e10a66eacc7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"login functionality\"",
              "fullTitle": "login functionality \"after each\" hook in \"login functionality\"",
              "timedOut": false,
              "duration": 2268,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginPage.close();",
              "err": {},
              "uuid": "7c88c8ef-512b-4296-9668-4d8afd06a847",
              "parentUUID": "9f569888-50dd-48df-ac2e-9e10a66eacc7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "verify successful login",
              "fullTitle": "login functionality verify successful login",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    await LoginPage.setUserName(\"student\");\n    await LoginPage.setPassword(\"Password123\");\n    await LoginPage.submit();\n    \n    const showErrorMsg = await LoginPage.getOpacityForErrorMsg();\n    const title = await LoginPage.getTitle();\n    assert.equal(showErrorMsg, 0);\n    assert.equal(title, \"Logged In Successfully | Practice Test Automation\");\n} catch (e) {\n    console.error(\"Error in verify successful login:\", e);\n}",
              "err": {},
              "uuid": "55da3cda-bdc4-472a-8c83-dcac91317fe6",
              "parentUUID": "9f569888-50dd-48df-ac2e-9e10a66eacc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "unsuccessful login",
              "fullTitle": "login functionality unsuccessful login",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    await LoginPage.setUserName(\"student\");\n    await LoginPage.setPassword(\"123\");\n    await LoginPage.submit();\n    \n    const showErrorMsg = await LoginPage.getOpacityForErrorMsg();\n    const title = await LoginPage.getTitle();\n    assert.equal(title, \"Test Login | Practice Test Automation\");\n    assert.equal(showErrorMsg, 1);\n} catch (e) {\n    console.error(\"Error in unsuccessful login:\", e);\n}",
              "err": {},
              "uuid": "eed56588-b4d6-42c9-b26a-00a8815f7246",
              "parentUUID": "9f569888-50dd-48df-ac2e-9e10a66eacc7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "55da3cda-bdc4-472a-8c83-dcac91317fe6",
            "eed56588-b4d6-42c9-b26a-00a8815f7246"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}